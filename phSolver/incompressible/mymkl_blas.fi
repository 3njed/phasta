!===============================================================================
! Copyright 1999-2018 Intel Corporation.
!
! This software and the related documents are Intel copyrighted  materials,  and
! your use of  them is  governed by the  express license  under which  they were
! provided to you (License).  Unless the License provides otherwise, you may not
! use, modify, copy, publish, distribute,  disclose or transmit this software or
! the related documents without Intel's prior written permission.
!
! This software and the related documents  are provided as  is,  with no express
! or implied  warranties,  other  than those  that are  expressly stated  in the
! License.
!===============================================================================

!  Content:
!      Intel(R) Math Kernel Library (Intel(R) MKL) FORTRAN interface for BLAS routines
!*******************************************************************************

      INTERFACE
      subroutine xerbla(srname,info)
      character*(*) srname
      integer*4     info
      END
      END INTERFACE

      INTERFACE
      logical function lsame(ca,cb)
      character*(*) ca,cb
      END
      END INTERFACE

      INTERFACE
      real function scabs1(c)
      complex   c
      END
      END INTERFACE

      INTERFACE
      subroutine saxpy(n,sa,sx,incx,sy,incy)
      real       sx(*),sy(*),sa
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine saxpby(n,sa,sx,incx,sb,sy,incy)
      real       sx(*),sy(*),sa,sb
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine scopy(n,sx,incx,sy,incy)
      real       sx(*),sy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      real function sdot(n,sx,incx,sy,incy)
      real       sx(*),sy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      real function sdsdot(n,sb,sx,incx,sy,incy)
      real       sb,sx(*),sy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine sscal(n,sa,sx,incx)
      real       sa,sx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine sswap (n,sx,incx,sy,incy)
      real       sx(*),sy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      real function snrm2 ( n, x, incx )
      integer    incx, n
      real       x( * )
      END
      END INTERFACE

      INTERFACE
      integer function isamax(n,sx,incx)
      real       sx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      integer function isamin(n,sx,incx)
      real       sx(*)
      integer    incx, n
      END
      END INTERFACE

      INTERFACE
      subroutine srot (n,sx,incx,sy,incy,c,s)
      real       sx(*),sy(*),c,s
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine srotg(sa,sb,c,s)
      real       sa,sb,c,s
      END
      END INTERFACE

      INTERFACE
      real function sasum(n,sx,incx)
      real       sx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine saxpyi( nz, a, x, indx, y )
      integer    nz, indx (*)
      real       y (*), x (*), a
      END
      END INTERFACE

      INTERFACE
      real function sdoti( nz, x, indx, y )
      integer    nz, indx (*)
      real       x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      subroutine sgthr( nz, y, x, indx )
      integer    nz, indx (*)
      real       y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine sgthrz( nz, y, x, indx )
      integer    nz, indx (*)
      real       y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine sroti( nz, x, indx, y, c, s )
      integer    nz, indx (*)
      real       x (*), y (*), c, s
      END
      END INTERFACE

      INTERFACE
      subroutine srotm (n,sx,incx,sy,incy,sparam)
      real       sx, sy, sparam
      integer    n, incx, incy
      END
      END INTERFACE

      INTERFACE
      subroutine srotmg (sd1,sd2,sx1,sy1,sparam)
      real       sd1, sd2, sx1, sy1, sparam
      END
      END INTERFACE

      INTERFACE
      subroutine ssctr ( nz, x, indx, y )
      integer    nz, indx (*)
      real       x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      double precision function dcabs1(z)
      double complex   z
      END
      END INTERFACE

      INTERFACE
      subroutine daxpy(n,da,dx,incx,dy,incy)
      double precision dx(*),dy(*),da
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine daxpby(n,da,dx,incx,db,dy,incy)
      double precision dx(*),dy(*),da,db
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine  dcopy(n,dx,incx,dy,incy)
      double precision dx(*),dy(*)
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double precision function ddot(n,dx,incx,dy,incy)
      double precision dx(*),dy(*)
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double precision function dsdot(n,sx,incx,sy,incy)
      real             sx(*),sy(*)
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine  dscal(n,da,dx,incx)
      double precision da,dx(*)
      integer          incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine  dswap (n,dx,incx,dy,incy)
      double precision dx(*),dy(*)
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double precision function dnrm2 ( n, x, incx )
      integer          incx, n
      double precision x( * )
      END
      END INTERFACE

      INTERFACE
      integer function idamax(n,dx,incx)
      double precision dx(*)
      integer          incx,n
      END
      END INTERFACE

      INTERFACE
      integer function idamin(n,dx,incx)
      double precision dx(*)
      integer          incx, n
      END
      END INTERFACE

      INTERFACE
      subroutine  drot (n,dx,incx,dy,incy,c,s)
      double precision dx(*),dy(*),c,s
      integer          incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine drotg(da,db,c,s)
      double precision da,db,c,s
      END
      END INTERFACE

      INTERFACE
      double precision function dasum(n,dx,incx)
      double precision dx(*)
      integer          incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine daxpyi( nz, a, x, indx, y )
      integer          nz, indx (*)
      double precision y (*), x (*), a
      END
      END INTERFACE

      INTERFACE
      double precision function ddoti( nz, x, indx, y )
      integer          nz, indx (*)
      double precision x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      subroutine dgthr( nz, y, x, indx )
      integer          nz, indx (*)
      double precision y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine dgthrz( nz, y, x, indx )
      integer          nz, indx (*)
      double precision y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine droti( nz, x, indx, y, c, s )
      integer           nz, indx (*)
      double precision  x (*), y (*), c, s
      END
      END INTERFACE

      INTERFACE
      subroutine drotm(n,dx,incx,dy,incy,dparam)
      double precision dparam, dx, dy
      integer          n,incx,incy
      END
      END INTERFACE

      INTERFACE
      subroutine drotmg(dd1,dd2,dx1,dy1,dparam)
      double precision dd1, dd2, dx1, dy1, dparam
      END
      END INTERFACE

      INTERFACE
      subroutine dsctr( nz, x, indx, y )
      integer          nz, indx (*)
      double precision x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      subroutine caxpy(n,ca,cx,incx,cy,incy)
      complex    cx(*),cy(*),ca
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine caxpby(n,ca,cx,incx,cb,cy,incy)
      complex    cx(*),cy(*),ca,cb
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine ccopy(n,cx,incx,cy,incy)
      complex    cx(*),cy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      complex function cdotc(n,cx,incx,cy,incy)
      complex    cx(*),cy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      complex function cdotu(n,cx,incx,cy,incy)
      complex    cx(*),cy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine cscal(n,ca,cx,incx)
      complex    ca,cx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine csscal(n,sa,cx,incx)
      complex    cx(*)
      real       sa
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine cswap(n,cx,incx,cy,incy)
      complex    cx(*),cy(*)
      integer    incx,incy,n
      END
      END INTERFACE

      INTERFACE
      real function scnrm2( n, x, incx )
      integer    incx, n
      complex    x( * )
      END
      END INTERFACE

      INTERFACE
      integer function icamax(n,cx,incx)
      complex    cx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      integer function icamin(n,cx,incx)
      complex    cx(*)
      integer    incx, n
      END
      END INTERFACE

      INTERFACE
      subroutine csrot (n,sx,incx,sy,incy,c,s)
      integer    n
      complex    sx(*), sy(*)
      real       c, s
      integer    incx, incy
      END
      END INTERFACE

      INTERFACE
      subroutine crotg(ca,cb,c,s)
      complex    ca,cb,s
      real       c
      END
      END INTERFACE

      INTERFACE
      real function scasum(n,cx,incx)
      complex    cx(*)
      integer    incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine caxpyi( nz, a, x, indx, y )
      integer    nz, indx (*)
      complex    y (*), x (*), a
      END
      END INTERFACE

      INTERFACE
      complex function cdotci( nz, x, indx, y )
      integer    nz, indx (*)
      complex    x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      complex function cdotui( nz, x, indx, y )
      integer    nz, indx (*)
      complex    x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      subroutine cgthr( nz, y, x, indx )
      integer    nz, indx (*)
      complex    y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine cgthrz( nz, y, x, indx )
      integer    nz, indx (*)
      complex    y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine csctr( nz, x, indx, y )
      integer    nz, indx (*)
      complex    x (*), y (*)
      END
      END INTERFACE

      INTERFACE
      subroutine zaxpy(n,za,zx,incx,zy,incy)
      double complex zx(*),zy(*),za
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine zaxpby(n,za,zx,incx,zb,zy,incy)
      double complex zx(*),zy(*),za,zb
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine  zcopy(n,zx,incx,zy,incy)
      double complex zx(*),zy(*)
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double complex function zdotc(n,zx,incx,zy,incy)
      double complex zx(*),zy(*)
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double complex function zdotu(n,zx,incx,zy,incy)
      double complex zx(*),zy(*)
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      subroutine  zscal(n,za,zx,incx)
      double complex za,zx(*)
      integer        incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine  zdscal(n,da,zx,incx)
      double complex   zx(*)
      double precision da
      integer          incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine  zswap (n,zx,incx,zy,incy)
      double complex zx(*),zy(*)
      integer        incx,incy,n
      END
      END INTERFACE

      INTERFACE
      double precision function dznrm2( n, x, incx )
      integer        incx, n
      complex*16     x( * )
      END
      END INTERFACE

      INTERFACE
      integer function izamax(n,zx,incx)
      double complex zx(*)
      integer        incx,n
      END
      END INTERFACE

      INTERFACE
      integer function izamin(n,zx,incx)
      double complex zx(*)
      integer        incx, n
      END
      END INTERFACE

      INTERFACE
      subroutine zdrot(n,dx,incx,dy,incy,c,s)
      double complex   dx(1), dy(1)
      double precision c, s
      integer          incx, incy, n
      END
      END INTERFACE

      INTERFACE
      subroutine zrotg(ca,cb,c,s)
      double complex   ca,cb,s
      double precision c
      END
      END INTERFACE

      INTERFACE
      double precision function dzasum(n,zx,incx)
      double complex   zx(*)
      integer          incx,n
      END
      END INTERFACE

      INTERFACE
      subroutine zaxpyi( nz, a, x, indx, y )
      integer          nz, indx (*)
      complex*16       y (*), x (*), a
      END
      END INTERFACE

      INTERFACE
      function zdotci( nz, x, indx, y )
      integer          nz, indx (*)
      complex*16       x (*), y (*), zdotci
      END
      END INTERFACE

      INTERFACE
      function zdotui( nz, x, indx, y )
      integer          nz, indx (*)
      complex*16       x (*), y (*), zdotui
      END
      END INTERFACE

      INTERFACE
      subroutine zgthr( nz, y, x, indx )
      integer          nz, indx (*)
      complex*16       y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine zgthrz( nz, y, x, indx )
      integer          nz, indx (*)
      complex*16       y (*), x (*)
      END
      END INTERFACE

      INTERFACE
      subroutine zsctr( nz, x, indx, y )
      integer          nz, indx (*)
      complex*16       x (*), y (*)
      END
      END INTERFACE
